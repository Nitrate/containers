name: Test Images

on:
  pull_request:
    branches:
      - main

jobs:
  build_develop:
    name: Build from develop branch and push
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install -y make git
      - uses: actions/checkout@v3
      - name: Log into registry
        run: |
          echo "${{ secrets.quay_token }}" | \
              docker login -u "${{ secrets.quay_username }}" --password-stdin quay.io
      - run: |
          make all-images push-all engine=docker ns=quay.io/nitratecontainerstest

  build_release:
    name: Build from a release and push
    runs-on: ubuntu-22.04
    steps:
      - run: |
          sudo apt-get update
          sudo apt-get install -y make git python3-pip
      - uses: actions/checkout@v3
      - name: Log into registry
        run: |
          echo "${{ secrets.quay_token }}" | \
              docker login -u "${{ secrets.quay_username }}" --password-stdin quay.io
      - run: |
          make all-images push-all \
              engine=docker ns=quay.io/nitratecontainerstest version=4.13

  build_based_on_f36:
    name: Test build development version based on Fedora 36 only
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install -y make git
      - uses: actions/checkout@v3
      - run: |
          make all-images \
            engine=docker \
            baseimage=registry.fedoraproject.org/fedora:36 \
            ns=quay.io/nitratecontainerstest

  # A simple test to check if the launched instance is able to respond normally.
  test_run:
    name: Test Nitrate run
    needs: [build_develop, build_release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["4.13", "develop"]
    steps:
      - run: sudo apt-get install -y docker-compose
      - uses: actions/checkout@v3
      - run: |
          export NS=quay.io/nitratecontainerstest
          export VERSION=${{ matrix.version }}
          docker-compose up -d
          echo Wait for all component to start completely
          sleep 20s
          echo Execute curl inside web container
          docker-compose exec -T web bash -c "curl -L http://127.0.0.1:8080/"
          echo Get logs and verify an expected response
          docker-compose logs web | tail -n 1 | grep '"GET /accounts/login/ HTTP/1.1" 200 [0-9]\+$'
